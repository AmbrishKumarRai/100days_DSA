/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *temp1 = l1;
        ListNode *temp2 = l2;
        ListNode *dummyNode = new ListNode(-1);
        ListNode *curr = dummyNode;
        int carry{0};
        while(temp1 != nullptr || temp2 != nullptr){
            int sum{0};
            if(temp1 && temp2){
                sum = (temp1->val) + (temp2->val) + carry;
                temp1 = temp1->next;
                temp2 = temp2->next;
            }else if(temp1){
                sum = (temp1->val) + carry;
                temp1 = temp1->next;
            }else{
                sum = (temp2->val) + carry;
                temp2 = temp2->next;
            }

            ListNode *newNode = new ListNode(sum%10);
            carry = sum/10;
            curr->next = newNode;
            curr = newNode;
        }

        if(carry){
            ListNode *newNode = new ListNode(carry);
            curr->next = newNode;
        }


        return dummyNode->next;
        
    }
};